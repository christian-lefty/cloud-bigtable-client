// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v1/bigtable_service_messages.proto

package com.google.bigtable.v1;

/**
 * Protobuf type {@code google.bigtable.v1.MutateRowsResponse}
 *
 * <pre>
 * Response message for BigtableService.MutateRows.
 * </pre>
 */
public  final class MutateRowsResponse extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.bigtable.v1.MutateRowsResponse)
    MutateRowsResponseOrBuilder {
  // Use MutateRowsResponse.newBuilder() to construct.
  private MutateRowsResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private MutateRowsResponse() {
    statuses_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private MutateRowsResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              statuses_ = new java.util.ArrayList<com.google.rpc.Status>();
              mutable_bitField0_ |= 0x00000001;
            }
            statuses_.add(input.readMessage(com.google.rpc.Status.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        statuses_ = java.util.Collections.unmodifiableList(statuses_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.bigtable.v1.BigtableServiceMessagesProto.internal_static_google_bigtable_v1_MutateRowsResponse_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.v1.BigtableServiceMessagesProto.internal_static_google_bigtable_v1_MutateRowsResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.v1.MutateRowsResponse.class, com.google.bigtable.v1.MutateRowsResponse.Builder.class);
  }

  public static final int STATUSES_FIELD_NUMBER = 1;
  private java.util.List<com.google.rpc.Status> statuses_;
  /**
   * <code>repeated .google.rpc.Status statuses = 1;</code>
   *
   * <pre>
   * The results for each Entry from the request, presented in the order
   * in which the entries were originally given.
   * Depending on how requests are batched during execution, it is possible
   * for one Entry to fail due to an error with another Entry. In the event
   * that this occurs, the same error will be reported for both entries.
   * </pre>
   */
  public java.util.List<com.google.rpc.Status> getStatusesList() {
    return statuses_;
  }
  /**
   * <code>repeated .google.rpc.Status statuses = 1;</code>
   *
   * <pre>
   * The results for each Entry from the request, presented in the order
   * in which the entries were originally given.
   * Depending on how requests are batched during execution, it is possible
   * for one Entry to fail due to an error with another Entry. In the event
   * that this occurs, the same error will be reported for both entries.
   * </pre>
   */
  public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
      getStatusesOrBuilderList() {
    return statuses_;
  }
  /**
   * <code>repeated .google.rpc.Status statuses = 1;</code>
   *
   * <pre>
   * The results for each Entry from the request, presented in the order
   * in which the entries were originally given.
   * Depending on how requests are batched during execution, it is possible
   * for one Entry to fail due to an error with another Entry. In the event
   * that this occurs, the same error will be reported for both entries.
   * </pre>
   */
  public int getStatusesCount() {
    return statuses_.size();
  }
  /**
   * <code>repeated .google.rpc.Status statuses = 1;</code>
   *
   * <pre>
   * The results for each Entry from the request, presented in the order
   * in which the entries were originally given.
   * Depending on how requests are batched during execution, it is possible
   * for one Entry to fail due to an error with another Entry. In the event
   * that this occurs, the same error will be reported for both entries.
   * </pre>
   */
  public com.google.rpc.Status getStatuses(int index) {
    return statuses_.get(index);
  }
  /**
   * <code>repeated .google.rpc.Status statuses = 1;</code>
   *
   * <pre>
   * The results for each Entry from the request, presented in the order
   * in which the entries were originally given.
   * Depending on how requests are batched during execution, it is possible
   * for one Entry to fail due to an error with another Entry. In the event
   * that this occurs, the same error will be reported for both entries.
   * </pre>
   */
  public com.google.rpc.StatusOrBuilder getStatusesOrBuilder(
      int index) {
    return statuses_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < statuses_.size(); i++) {
      output.writeMessage(1, statuses_.get(i));
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < statuses_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, statuses_.get(i));
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.v1.MutateRowsResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.bigtable.v1.MutateRowsResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.bigtable.v1.MutateRowsResponse}
   *
   * <pre>
   * Response message for BigtableService.MutateRows.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.v1.MutateRowsResponse)
      com.google.bigtable.v1.MutateRowsResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableServiceMessagesProto.internal_static_google_bigtable_v1_MutateRowsResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableServiceMessagesProto.internal_static_google_bigtable_v1_MutateRowsResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.MutateRowsResponse.class, com.google.bigtable.v1.MutateRowsResponse.Builder.class);
    }

    // Construct using com.google.bigtable.v1.MutateRowsResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getStatusesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (statusesBuilder_ == null) {
        statuses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        statusesBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.bigtable.v1.BigtableServiceMessagesProto.internal_static_google_bigtable_v1_MutateRowsResponse_descriptor;
    }

    public com.google.bigtable.v1.MutateRowsResponse getDefaultInstanceForType() {
      return com.google.bigtable.v1.MutateRowsResponse.getDefaultInstance();
    }

    public com.google.bigtable.v1.MutateRowsResponse build() {
      com.google.bigtable.v1.MutateRowsResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.bigtable.v1.MutateRowsResponse buildPartial() {
      com.google.bigtable.v1.MutateRowsResponse result = new com.google.bigtable.v1.MutateRowsResponse(this);
      int from_bitField0_ = bitField0_;
      if (statusesBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          statuses_ = java.util.Collections.unmodifiableList(statuses_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.statuses_ = statuses_;
      } else {
        result.statuses_ = statusesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.v1.MutateRowsResponse) {
        return mergeFrom((com.google.bigtable.v1.MutateRowsResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.v1.MutateRowsResponse other) {
      if (other == com.google.bigtable.v1.MutateRowsResponse.getDefaultInstance()) return this;
      if (statusesBuilder_ == null) {
        if (!other.statuses_.isEmpty()) {
          if (statuses_.isEmpty()) {
            statuses_ = other.statuses_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStatusesIsMutable();
            statuses_.addAll(other.statuses_);
          }
          onChanged();
        }
      } else {
        if (!other.statuses_.isEmpty()) {
          if (statusesBuilder_.isEmpty()) {
            statusesBuilder_.dispose();
            statusesBuilder_ = null;
            statuses_ = other.statuses_;
            bitField0_ = (bitField0_ & ~0x00000001);
            statusesBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getStatusesFieldBuilder() : null;
          } else {
            statusesBuilder_.addAllMessages(other.statuses_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.bigtable.v1.MutateRowsResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.bigtable.v1.MutateRowsResponse) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.google.rpc.Status> statuses_ =
      java.util.Collections.emptyList();
    private void ensureStatusesIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        statuses_ = new java.util.ArrayList<com.google.rpc.Status>(statuses_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusesBuilder_;

    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public java.util.List<com.google.rpc.Status> getStatusesList() {
      if (statusesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(statuses_);
      } else {
        return statusesBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public int getStatusesCount() {
      if (statusesBuilder_ == null) {
        return statuses_.size();
      } else {
        return statusesBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public com.google.rpc.Status getStatuses(int index) {
      if (statusesBuilder_ == null) {
        return statuses_.get(index);
      } else {
        return statusesBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder setStatuses(
        int index, com.google.rpc.Status value) {
      if (statusesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatusesIsMutable();
        statuses_.set(index, value);
        onChanged();
      } else {
        statusesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder setStatuses(
        int index, com.google.rpc.Status.Builder builderForValue) {
      if (statusesBuilder_ == null) {
        ensureStatusesIsMutable();
        statuses_.set(index, builderForValue.build());
        onChanged();
      } else {
        statusesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder addStatuses(com.google.rpc.Status value) {
      if (statusesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatusesIsMutable();
        statuses_.add(value);
        onChanged();
      } else {
        statusesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder addStatuses(
        int index, com.google.rpc.Status value) {
      if (statusesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStatusesIsMutable();
        statuses_.add(index, value);
        onChanged();
      } else {
        statusesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder addStatuses(
        com.google.rpc.Status.Builder builderForValue) {
      if (statusesBuilder_ == null) {
        ensureStatusesIsMutable();
        statuses_.add(builderForValue.build());
        onChanged();
      } else {
        statusesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder addStatuses(
        int index, com.google.rpc.Status.Builder builderForValue) {
      if (statusesBuilder_ == null) {
        ensureStatusesIsMutable();
        statuses_.add(index, builderForValue.build());
        onChanged();
      } else {
        statusesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder addAllStatuses(
        java.lang.Iterable<? extends com.google.rpc.Status> values) {
      if (statusesBuilder_ == null) {
        ensureStatusesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, statuses_);
        onChanged();
      } else {
        statusesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder clearStatuses() {
      if (statusesBuilder_ == null) {
        statuses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        statusesBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public Builder removeStatuses(int index) {
      if (statusesBuilder_ == null) {
        ensureStatusesIsMutable();
        statuses_.remove(index);
        onChanged();
      } else {
        statusesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public com.google.rpc.Status.Builder getStatusesBuilder(
        int index) {
      return getStatusesFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public com.google.rpc.StatusOrBuilder getStatusesOrBuilder(
        int index) {
      if (statusesBuilder_ == null) {
        return statuses_.get(index);  } else {
        return statusesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public java.util.List<? extends com.google.rpc.StatusOrBuilder> 
         getStatusesOrBuilderList() {
      if (statusesBuilder_ != null) {
        return statusesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(statuses_);
      }
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public com.google.rpc.Status.Builder addStatusesBuilder() {
      return getStatusesFieldBuilder().addBuilder(
          com.google.rpc.Status.getDefaultInstance());
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public com.google.rpc.Status.Builder addStatusesBuilder(
        int index) {
      return getStatusesFieldBuilder().addBuilder(
          index, com.google.rpc.Status.getDefaultInstance());
    }
    /**
     * <code>repeated .google.rpc.Status statuses = 1;</code>
     *
     * <pre>
     * The results for each Entry from the request, presented in the order
     * in which the entries were originally given.
     * Depending on how requests are batched during execution, it is possible
     * for one Entry to fail due to an error with another Entry. In the event
     * that this occurs, the same error will be reported for both entries.
     * </pre>
     */
    public java.util.List<com.google.rpc.Status.Builder> 
         getStatusesBuilderList() {
      return getStatusesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getStatusesFieldBuilder() {
      if (statusesBuilder_ == null) {
        statusesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                statuses_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        statuses_ = null;
      }
      return statusesBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.bigtable.v1.MutateRowsResponse)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.v1.MutateRowsResponse)
  private static final com.google.bigtable.v1.MutateRowsResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.bigtable.v1.MutateRowsResponse();
  }

  public static com.google.bigtable.v1.MutateRowsResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MutateRowsResponse>
      PARSER = new com.google.protobuf.AbstractParser<MutateRowsResponse>() {
    public MutateRowsResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new MutateRowsResponse(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<MutateRowsResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MutateRowsResponse> getParserForType() {
    return PARSER;
  }

  public com.google.bigtable.v1.MutateRowsResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

