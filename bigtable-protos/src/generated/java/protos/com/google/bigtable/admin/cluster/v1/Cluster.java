// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/cluster/v1/bigtable_cluster_data.proto

package com.google.bigtable.admin.cluster.v1;

/**
 * Protobuf type {@code google.bigtable.admin.cluster.v1.Cluster}
 *
 * <pre>
 * An isolated set of Cloud BigTable resources on which tables can be hosted.
 * </pre>
 */
public  final class Cluster extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.bigtable.admin.cluster.v1.Cluster)
    ClusterOrBuilder {
  // Use Cluster.newBuilder() to construct.
  private Cluster(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Cluster() {
    name_ = "";
    displayName_ = "";
    serveNodes_ = 0;
    defaultStorageType_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Cluster(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            com.google.longrunning.Operation.Builder subBuilder = null;
            if (currentOperation_ != null) {
              subBuilder = currentOperation_.toBuilder();
            }
            currentOperation_ = input.readMessage(com.google.longrunning.Operation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(currentOperation_);
              currentOperation_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            displayName_ = s;
            break;
          }
          case 40: {

            serveNodes_ = input.readInt32();
            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            defaultStorageType_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.bigtable.admin.cluster.v1.BigtableClusterDataProto.internal_static_google_bigtable_admin_cluster_v1_Cluster_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.admin.cluster.v1.BigtableClusterDataProto.internal_static_google_bigtable_admin_cluster_v1_Cluster_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.admin.cluster.v1.Cluster.class, com.google.bigtable.admin.cluster.v1.Cluster.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * A permanent unique identifier for the cluster. For technical reasons, the
   * zone in which the cluster resides is included here.
   * Values are of the form
   * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
   * </pre>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * A permanent unique identifier for the cluster. For technical reasons, the
   * zone in which the cluster resides is included here.
   * Values are of the form
   * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CURRENT_OPERATION_FIELD_NUMBER = 3;
  private com.google.longrunning.Operation currentOperation_;
  /**
   * <code>optional .google.longrunning.Operation current_operation = 3;</code>
   *
   * <pre>
   * The operation currently running on the cluster, if any.
   * This cannot be set directly, only through CreateCluster, UpdateCluster,
   * or UndeleteCluster. Calls to these methods will be rejected if
   * "current_operation" is already set.
   * </pre>
   */
  public boolean hasCurrentOperation() {
    return currentOperation_ != null;
  }
  /**
   * <code>optional .google.longrunning.Operation current_operation = 3;</code>
   *
   * <pre>
   * The operation currently running on the cluster, if any.
   * This cannot be set directly, only through CreateCluster, UpdateCluster,
   * or UndeleteCluster. Calls to these methods will be rejected if
   * "current_operation" is already set.
   * </pre>
   */
  public com.google.longrunning.Operation getCurrentOperation() {
    return currentOperation_ == null ? com.google.longrunning.Operation.getDefaultInstance() : currentOperation_;
  }
  /**
   * <code>optional .google.longrunning.Operation current_operation = 3;</code>
   *
   * <pre>
   * The operation currently running on the cluster, if any.
   * This cannot be set directly, only through CreateCluster, UpdateCluster,
   * or UndeleteCluster. Calls to these methods will be rejected if
   * "current_operation" is already set.
   * </pre>
   */
  public com.google.longrunning.OperationOrBuilder getCurrentOperationOrBuilder() {
    return getCurrentOperation();
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 4;
  private volatile java.lang.Object displayName_;
  /**
   * <code>optional string display_name = 4;</code>
   *
   * <pre>
   * The descriptive name for this cluster as it appears in UIs.
   * Must be unique per zone.
   * </pre>
   */
  public java.lang.String getDisplayName() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      displayName_ = s;
      return s;
    }
  }
  /**
   * <code>optional string display_name = 4;</code>
   *
   * <pre>
   * The descriptive name for this cluster as it appears in UIs.
   * Must be unique per zone.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    java.lang.Object ref = displayName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      displayName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SERVE_NODES_FIELD_NUMBER = 5;
  private int serveNodes_;
  /**
   * <code>optional int32 serve_nodes = 5;</code>
   *
   * <pre>
   * The number of serve nodes allocated to this cluster.
   * </pre>
   */
  public int getServeNodes() {
    return serveNodes_;
  }

  public static final int DEFAULT_STORAGE_TYPE_FIELD_NUMBER = 8;
  private int defaultStorageType_;
  /**
   * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
   *
   * <pre>
   * What storage type to use for tables in this cluster. Only configurable at
   * cluster creation time. If unspecified, STORAGE_SSD will be used.
   * </pre>
   */
  public int getDefaultStorageTypeValue() {
    return defaultStorageType_;
  }
  /**
   * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
   *
   * <pre>
   * What storage type to use for tables in this cluster. Only configurable at
   * cluster creation time. If unspecified, STORAGE_SSD will be used.
   * </pre>
   */
  public com.google.bigtable.admin.cluster.v1.StorageType getDefaultStorageType() {
    com.google.bigtable.admin.cluster.v1.StorageType result = com.google.bigtable.admin.cluster.v1.StorageType.valueOf(defaultStorageType_);
    return result == null ? com.google.bigtable.admin.cluster.v1.StorageType.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (currentOperation_ != null) {
      output.writeMessage(3, getCurrentOperation());
    }
    if (!getDisplayNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, displayName_);
    }
    if (serveNodes_ != 0) {
      output.writeInt32(5, serveNodes_);
    }
    if (defaultStorageType_ != com.google.bigtable.admin.cluster.v1.StorageType.STORAGE_UNSPECIFIED.getNumber()) {
      output.writeEnum(8, defaultStorageType_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (currentOperation_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getCurrentOperation());
    }
    if (!getDisplayNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, displayName_);
    }
    if (serveNodes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, serveNodes_);
    }
    if (defaultStorageType_ != com.google.bigtable.admin.cluster.v1.StorageType.STORAGE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, defaultStorageType_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.cluster.v1.Cluster parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.bigtable.admin.cluster.v1.Cluster prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.bigtable.admin.cluster.v1.Cluster}
   *
   * <pre>
   * An isolated set of Cloud BigTable resources on which tables can be hosted.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.admin.cluster.v1.Cluster)
      com.google.bigtable.admin.cluster.v1.ClusterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.admin.cluster.v1.BigtableClusterDataProto.internal_static_google_bigtable_admin_cluster_v1_Cluster_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.admin.cluster.v1.BigtableClusterDataProto.internal_static_google_bigtable_admin_cluster_v1_Cluster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.admin.cluster.v1.Cluster.class, com.google.bigtable.admin.cluster.v1.Cluster.Builder.class);
    }

    // Construct using com.google.bigtable.admin.cluster.v1.Cluster.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      if (currentOperationBuilder_ == null) {
        currentOperation_ = null;
      } else {
        currentOperation_ = null;
        currentOperationBuilder_ = null;
      }
      displayName_ = "";

      serveNodes_ = 0;

      defaultStorageType_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.bigtable.admin.cluster.v1.BigtableClusterDataProto.internal_static_google_bigtable_admin_cluster_v1_Cluster_descriptor;
    }

    public com.google.bigtable.admin.cluster.v1.Cluster getDefaultInstanceForType() {
      return com.google.bigtable.admin.cluster.v1.Cluster.getDefaultInstance();
    }

    public com.google.bigtable.admin.cluster.v1.Cluster build() {
      com.google.bigtable.admin.cluster.v1.Cluster result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.bigtable.admin.cluster.v1.Cluster buildPartial() {
      com.google.bigtable.admin.cluster.v1.Cluster result = new com.google.bigtable.admin.cluster.v1.Cluster(this);
      result.name_ = name_;
      if (currentOperationBuilder_ == null) {
        result.currentOperation_ = currentOperation_;
      } else {
        result.currentOperation_ = currentOperationBuilder_.build();
      }
      result.displayName_ = displayName_;
      result.serveNodes_ = serveNodes_;
      result.defaultStorageType_ = defaultStorageType_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.admin.cluster.v1.Cluster) {
        return mergeFrom((com.google.bigtable.admin.cluster.v1.Cluster)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.admin.cluster.v1.Cluster other) {
      if (other == com.google.bigtable.admin.cluster.v1.Cluster.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasCurrentOperation()) {
        mergeCurrentOperation(other.getCurrentOperation());
      }
      if (!other.getDisplayName().isEmpty()) {
        displayName_ = other.displayName_;
        onChanged();
      }
      if (other.getServeNodes() != 0) {
        setServeNodes(other.getServeNodes());
      }
      if (other.defaultStorageType_ != 0) {
        setDefaultStorageTypeValue(other.getDefaultStorageTypeValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.bigtable.admin.cluster.v1.Cluster parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.bigtable.admin.cluster.v1.Cluster) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * A permanent unique identifier for the cluster. For technical reasons, the
     * zone in which the cluster resides is included here.
     * Values are of the form
     * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * A permanent unique identifier for the cluster. For technical reasons, the
     * zone in which the cluster resides is included here.
     * Values are of the form
     * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * A permanent unique identifier for the cluster. For technical reasons, the
     * zone in which the cluster resides is included here.
     * Values are of the form
     * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
     * </pre>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * A permanent unique identifier for the cluster. For technical reasons, the
     * zone in which the cluster resides is included here.
     * Values are of the form
     * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
     * </pre>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * A permanent unique identifier for the cluster. For technical reasons, the
     * zone in which the cluster resides is included here.
     * Values are of the form
     * projects/&lt;project&gt;/zones/&lt;zone&gt;/clusters/[a-z][-a-z0-9]*
     * </pre>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.longrunning.Operation currentOperation_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder> currentOperationBuilder_;
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public boolean hasCurrentOperation() {
      return currentOperationBuilder_ != null || currentOperation_ != null;
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public com.google.longrunning.Operation getCurrentOperation() {
      if (currentOperationBuilder_ == null) {
        return currentOperation_ == null ? com.google.longrunning.Operation.getDefaultInstance() : currentOperation_;
      } else {
        return currentOperationBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public Builder setCurrentOperation(com.google.longrunning.Operation value) {
      if (currentOperationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        currentOperation_ = value;
        onChanged();
      } else {
        currentOperationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public Builder setCurrentOperation(
        com.google.longrunning.Operation.Builder builderForValue) {
      if (currentOperationBuilder_ == null) {
        currentOperation_ = builderForValue.build();
        onChanged();
      } else {
        currentOperationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public Builder mergeCurrentOperation(com.google.longrunning.Operation value) {
      if (currentOperationBuilder_ == null) {
        if (currentOperation_ != null) {
          currentOperation_ =
            com.google.longrunning.Operation.newBuilder(currentOperation_).mergeFrom(value).buildPartial();
        } else {
          currentOperation_ = value;
        }
        onChanged();
      } else {
        currentOperationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public Builder clearCurrentOperation() {
      if (currentOperationBuilder_ == null) {
        currentOperation_ = null;
        onChanged();
      } else {
        currentOperation_ = null;
        currentOperationBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public com.google.longrunning.Operation.Builder getCurrentOperationBuilder() {
      
      onChanged();
      return getCurrentOperationFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    public com.google.longrunning.OperationOrBuilder getCurrentOperationOrBuilder() {
      if (currentOperationBuilder_ != null) {
        return currentOperationBuilder_.getMessageOrBuilder();
      } else {
        return currentOperation_ == null ?
            com.google.longrunning.Operation.getDefaultInstance() : currentOperation_;
      }
    }
    /**
     * <code>optional .google.longrunning.Operation current_operation = 3;</code>
     *
     * <pre>
     * The operation currently running on the cluster, if any.
     * This cannot be set directly, only through CreateCluster, UpdateCluster,
     * or UndeleteCluster. Calls to these methods will be rejected if
     * "current_operation" is already set.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder> 
        getCurrentOperationFieldBuilder() {
      if (currentOperationBuilder_ == null) {
        currentOperationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.longrunning.Operation, com.google.longrunning.Operation.Builder, com.google.longrunning.OperationOrBuilder>(
                getCurrentOperation(),
                getParentForChildren(),
                isClean());
        currentOperation_ = null;
      }
      return currentOperationBuilder_;
    }

    private java.lang.Object displayName_ = "";
    /**
     * <code>optional string display_name = 4;</code>
     *
     * <pre>
     * The descriptive name for this cluster as it appears in UIs.
     * Must be unique per zone.
     * </pre>
     */
    public java.lang.String getDisplayName() {
      java.lang.Object ref = displayName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        displayName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string display_name = 4;</code>
     *
     * <pre>
     * The descriptive name for this cluster as it appears in UIs.
     * Must be unique per zone.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      java.lang.Object ref = displayName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        displayName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string display_name = 4;</code>
     *
     * <pre>
     * The descriptive name for this cluster as it appears in UIs.
     * Must be unique per zone.
     * </pre>
     */
    public Builder setDisplayName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      displayName_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string display_name = 4;</code>
     *
     * <pre>
     * The descriptive name for this cluster as it appears in UIs.
     * Must be unique per zone.
     * </pre>
     */
    public Builder clearDisplayName() {
      
      displayName_ = getDefaultInstance().getDisplayName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string display_name = 4;</code>
     *
     * <pre>
     * The descriptive name for this cluster as it appears in UIs.
     * Must be unique per zone.
     * </pre>
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      displayName_ = value;
      onChanged();
      return this;
    }

    private int serveNodes_ ;
    /**
     * <code>optional int32 serve_nodes = 5;</code>
     *
     * <pre>
     * The number of serve nodes allocated to this cluster.
     * </pre>
     */
    public int getServeNodes() {
      return serveNodes_;
    }
    /**
     * <code>optional int32 serve_nodes = 5;</code>
     *
     * <pre>
     * The number of serve nodes allocated to this cluster.
     * </pre>
     */
    public Builder setServeNodes(int value) {
      
      serveNodes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int32 serve_nodes = 5;</code>
     *
     * <pre>
     * The number of serve nodes allocated to this cluster.
     * </pre>
     */
    public Builder clearServeNodes() {
      
      serveNodes_ = 0;
      onChanged();
      return this;
    }

    private int defaultStorageType_ = 0;
    /**
     * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
     *
     * <pre>
     * What storage type to use for tables in this cluster. Only configurable at
     * cluster creation time. If unspecified, STORAGE_SSD will be used.
     * </pre>
     */
    public int getDefaultStorageTypeValue() {
      return defaultStorageType_;
    }
    /**
     * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
     *
     * <pre>
     * What storage type to use for tables in this cluster. Only configurable at
     * cluster creation time. If unspecified, STORAGE_SSD will be used.
     * </pre>
     */
    public Builder setDefaultStorageTypeValue(int value) {
      defaultStorageType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
     *
     * <pre>
     * What storage type to use for tables in this cluster. Only configurable at
     * cluster creation time. If unspecified, STORAGE_SSD will be used.
     * </pre>
     */
    public com.google.bigtable.admin.cluster.v1.StorageType getDefaultStorageType() {
      com.google.bigtable.admin.cluster.v1.StorageType result = com.google.bigtable.admin.cluster.v1.StorageType.valueOf(defaultStorageType_);
      return result == null ? com.google.bigtable.admin.cluster.v1.StorageType.UNRECOGNIZED : result;
    }
    /**
     * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
     *
     * <pre>
     * What storage type to use for tables in this cluster. Only configurable at
     * cluster creation time. If unspecified, STORAGE_SSD will be used.
     * </pre>
     */
    public Builder setDefaultStorageType(com.google.bigtable.admin.cluster.v1.StorageType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      defaultStorageType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.cluster.v1.StorageType default_storage_type = 8;</code>
     *
     * <pre>
     * What storage type to use for tables in this cluster. Only configurable at
     * cluster creation time. If unspecified, STORAGE_SSD will be used.
     * </pre>
     */
    public Builder clearDefaultStorageType() {
      
      defaultStorageType_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.bigtable.admin.cluster.v1.Cluster)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.cluster.v1.Cluster)
  private static final com.google.bigtable.admin.cluster.v1.Cluster DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.bigtable.admin.cluster.v1.Cluster();
  }

  public static com.google.bigtable.admin.cluster.v1.Cluster getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Cluster>
      PARSER = new com.google.protobuf.AbstractParser<Cluster>() {
    public Cluster parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Cluster(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Cluster> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Cluster> getParserForType() {
    return PARSER;
  }

  public com.google.bigtable.admin.cluster.v1.Cluster getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

